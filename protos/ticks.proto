syntax="proto3";

package ataas.ticks;
option go_package = "pm.tcfw.com.au/source/ataas/api/pb/ticks";

import "google/api/annotations.proto";
import "gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;

message Tick {
	string market = 1;
	string instrument = 2;
	float bestBid = 3;
	float bestAsk = 4;
	float last = 5;
	float timestamp = 6;
	float volume24h = 7;
	float highest24h = 8;
	float lowest24h = 9;
	float closePriceChange24h = 10;
	float open = 11;
}

message OHLCV {
	string market = 1;
	string instrument = 2;
	float open = 3;
	float high = 4;
	float low = 5;
	float close = 6;
	float volume = 7;
	int64 timestamp = 8;
}

enum TradeDirection {
	BUY = 0;
	SELL = 1;
}

message Trade {
	string market = 1 [(gogoproto.moretags) = "msgpack:\"m\""];
	string instrument = 2 [(gogoproto.moretags) = "msgpack:\"s\""];
	string tradeID = 3 [(gogoproto.moretags) = "msgpack:\"i\""];
	TradeDirection direction = 4 [(gogoproto.moretags) = "msgpack:\"d\""];
	float amount = 5 [(gogoproto.moretags) = "msgpack:\"p\""];
	float units = 6 [(gogoproto.moretags) = "msgpack:\"q\""];
	int64 timestamp = 7 [(gogoproto.moretags) = "msgpack:\"t\""];
}

message GetRequest {
	string market = 1;
	string instrument = 2;
	int32 depth = 4;
}

message TicksResponse {
	repeated Tick ticks = 1;
}

message TradesResponse {
	repeated Trade data = 1;
}

message CandlesRequest {
	string market = 1;
	string instrument = 2;
	string interval = 3;
	int32 depth = 4;
}

message CandlesResponse {
	repeated OHLCV data = 1;
}

message RangeRequest {
	string market = 1;
	string instrument = 2;
	string since = 3;
	string until = 4;
}

message CompareRequest {
	string market = 1;
	string instrument = 2;
	string interval = 3;
}

message CompareResponse {
	float difference = 1;
}

service HistoryService {
	rpc Trades(GetRequest) returns (TradesResponse)  {
        option (google.api.http) = {
            get: "/v1/history/trades"
        };
    };
	rpc TradesRange(RangeRequest) returns (TradesResponse)  {
		option (google.api.http) = {
			get: "/v1/history/trades/{since}"
        };
    };
	
	rpc TradesRangeStream(RangeRequest) returns (stream Trade);

	rpc Candles(CandlesRequest) returns (CandlesResponse)  {
        option (google.api.http) = {
            get: "/v1/history/candle"
        };
    };
}