syntax="proto3";

package trader.blocks;
option go_package = "pm.tcfw.com.au/source/trader/api/pb/blocks";

import "google/api/annotations.proto";
import "orders.proto";
import "gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;


enum BlockState {
	NOTHING = 0;
	PURCHASED = 1;
	SOLD = 2;
	ENDED = 3;
}

message Block {
	string id = 1;
	string strategy_id = 2;
	double baseUnits = 3;
	double currentUnits = 4;
	float purchase = 5;
	BlockState state = 8;
	int64 watchDuration = 9;
	bool shortSellAllowed = 10;
	float backoutPercentage = 11;

	string market = 12;
	string instrument = 13;
}

message GetRequest {
	string id = 1;
}

message ListRequest {}

message ListResponse {
	repeated Block blocks = 1;
}

message ManualRequest {
	string id = 1;
	trader.orders.Action action = 2;
}

message ManualResponse {
	trader.orders.Order order = 1;
}

message DeleteRequest {
	string id = 1;
}

message DeleteResponse {}

service BlocksService {
	rpc New(Block) returns (Block) {
		option (google.api.http) = {
            post: "/v1/blocks"
            body: "*"
		};
	};
	rpc List(ListRequest) returns (ListResponse) {
		option (google.api.http) = {
            get: "/v1/blocks"
		};
	};
	rpc Get(GetRequest) returns (Block) {
		option (google.api.http) = {
            get: "/v1/blocks/{id}"
		};
	};
	rpc ManualAction(ManualRequest) returns (ManualResponse) {
		option (google.api.http) = {
            post: "/v1/blocks/{id}/action/{action}"
			body: "*"
		};
	};
	rpc Delete(DeleteRequest) returns (DeleteResponse) {
		option (google.api.http) = {
            delete: "/v1/blocks/{id}"
		};
	};
}